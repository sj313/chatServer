// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages/message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ChatServer.Transmissions {

  /// <summary>Holder for reflection information generated from messages/message.proto</summary>
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for messages/message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZtZXNzYWdlcy9tZXNzYWdlLnByb3RvEhhDaGF0U2VydmVyLlRyYW5zbWlz",
            "c2lvbnMaH21lc3NhZ2VzL2VuY3J5cHRlZE1lc3NhZ2UucHJvdG8aHG1lc3Nh",
            "Z2VzL3NlcnZlck1lc3NhZ2UucHJvdG8isgEKB01lc3NhZ2USDgoGY2hhdElE",
            "GAEgASgDEkYKEGVuY3J5cHRlZE1lc3NhZ2UYAiABKAsyKi5DaGF0U2VydmVy",
            "LlRyYW5zbWlzc2lvbnMuRW5jcnlwdGVkTWVzc2FnZUgAEkAKDXNlcnZlck1l",
            "c3NhZ2UYAyABKAsyJy5DaGF0U2VydmVyLlRyYW5zbWlzc2lvbnMuU2VydmVy",
            "TWVzc2FnZUgAQg0KC21lc3NhZ2VUeXBlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ChatServer.Transmissions.EncryptedMessageReflection.Descriptor, global::ChatServer.Transmissions.ServerMessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Transmissions.Message), global::ChatServer.Transmissions.Message.Parser, new[]{ "ChatID", "EncryptedMessage", "ServerMessage" }, new[]{ "MessageType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Transmissions.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      chatID_ = other.chatID_;
      switch (other.MessageTypeCase) {
        case MessageTypeOneofCase.EncryptedMessage:
          EncryptedMessage = other.EncryptedMessage.Clone();
          break;
        case MessageTypeOneofCase.ServerMessage:
          ServerMessage = other.ServerMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "chatID" field.</summary>
    public const int ChatIDFieldNumber = 1;
    private long chatID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ChatID {
      get { return chatID_; }
      set {
        chatID_ = value;
      }
    }

    /// <summary>Field number for the "encryptedMessage" field.</summary>
    public const int EncryptedMessageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Transmissions.EncryptedMessage EncryptedMessage {
      get { return messageTypeCase_ == MessageTypeOneofCase.EncryptedMessage ? (global::ChatServer.Transmissions.EncryptedMessage) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.EncryptedMessage;
      }
    }

    /// <summary>Field number for the "serverMessage" field.</summary>
    public const int ServerMessageFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Transmissions.ServerMessage ServerMessage {
      get { return messageTypeCase_ == MessageTypeOneofCase.ServerMessage ? (global::ChatServer.Transmissions.ServerMessage) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.ServerMessage;
      }
    }

    private object messageType_;
    /// <summary>Enum of possible cases for the "messageType" oneof.</summary>
    public enum MessageTypeOneofCase {
      None = 0,
      EncryptedMessage = 2,
      ServerMessage = 3,
    }
    private MessageTypeOneofCase messageTypeCase_ = MessageTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageTypeOneofCase MessageTypeCase {
      get { return messageTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageType() {
      messageTypeCase_ = MessageTypeOneofCase.None;
      messageType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChatID != other.ChatID) return false;
      if (!object.Equals(EncryptedMessage, other.EncryptedMessage)) return false;
      if (!object.Equals(ServerMessage, other.ServerMessage)) return false;
      if (MessageTypeCase != other.MessageTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChatID != 0L) hash ^= ChatID.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.EncryptedMessage) hash ^= EncryptedMessage.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.ServerMessage) hash ^= ServerMessage.GetHashCode();
      hash ^= (int) messageTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChatID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ChatID);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.EncryptedMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(EncryptedMessage);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ServerMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(ServerMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChatID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ChatID);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.EncryptedMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(EncryptedMessage);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ServerMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(ServerMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChatID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChatID);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.EncryptedMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptedMessage);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ServerMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.ChatID != 0L) {
        ChatID = other.ChatID;
      }
      switch (other.MessageTypeCase) {
        case MessageTypeOneofCase.EncryptedMessage:
          if (EncryptedMessage == null) {
            EncryptedMessage = new global::ChatServer.Transmissions.EncryptedMessage();
          }
          EncryptedMessage.MergeFrom(other.EncryptedMessage);
          break;
        case MessageTypeOneofCase.ServerMessage:
          if (ServerMessage == null) {
            ServerMessage = new global::ChatServer.Transmissions.ServerMessage();
          }
          ServerMessage.MergeFrom(other.ServerMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChatID = input.ReadInt64();
            break;
          }
          case 18: {
            global::ChatServer.Transmissions.EncryptedMessage subBuilder = new global::ChatServer.Transmissions.EncryptedMessage();
            if (messageTypeCase_ == MessageTypeOneofCase.EncryptedMessage) {
              subBuilder.MergeFrom(EncryptedMessage);
            }
            input.ReadMessage(subBuilder);
            EncryptedMessage = subBuilder;
            break;
          }
          case 26: {
            global::ChatServer.Transmissions.ServerMessage subBuilder = new global::ChatServer.Transmissions.ServerMessage();
            if (messageTypeCase_ == MessageTypeOneofCase.ServerMessage) {
              subBuilder.MergeFrom(ServerMessage);
            }
            input.ReadMessage(subBuilder);
            ServerMessage = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChatID = input.ReadInt64();
            break;
          }
          case 18: {
            global::ChatServer.Transmissions.EncryptedMessage subBuilder = new global::ChatServer.Transmissions.EncryptedMessage();
            if (messageTypeCase_ == MessageTypeOneofCase.EncryptedMessage) {
              subBuilder.MergeFrom(EncryptedMessage);
            }
            input.ReadMessage(subBuilder);
            EncryptedMessage = subBuilder;
            break;
          }
          case 26: {
            global::ChatServer.Transmissions.ServerMessage subBuilder = new global::ChatServer.Transmissions.ServerMessage();
            if (messageTypeCase_ == MessageTypeOneofCase.ServerMessage) {
              subBuilder.MergeFrom(ServerMessage);
            }
            input.ReadMessage(subBuilder);
            ServerMessage = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
